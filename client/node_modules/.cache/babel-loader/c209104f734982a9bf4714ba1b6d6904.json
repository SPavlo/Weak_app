{"ast":null,"code":"var _jsxFileName = \"C:\\\\Main\\\\Projects\\\\weak_app\\\\client\\\\src\\\\pages\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Button, Col, Container, FormControl, InputGroup, Row } from \"react-bootstrap\";\nimport SideBar from \"../components/SideBar\";\nimport BoxList from \"../components/BoxList\";\nimport CreateBox from \"../components/modals/CreateBox\";\nimport { Context } from \"../index\";\nimport { fetchBoxes } from \"../http/boxApi\";\nimport { fetchPostCards } from \"../http/postCardApi\";\nimport PostCardList from \"../components/PostCardList\";\nimport BoxSort from \"../components/BoxSort\";\nimport CreatePostCard from \"../components/modals/CreatePostCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Main = () => {\n  _s();\n\n  const [selectedSort, setSelectedSort] = useState('name');\n  const [boxVisible, setBoxVisible] = useState(false);\n  const [postCardVisible, setPostCardVisible] = useState(false);\n  const [selectedType, setSelectedType] = useState('');\n  const {\n    box\n  } = useContext(Context);\n  const {\n    postCard\n  } = useContext(Context);\n\n  const selectType = type => {\n    setSelectedType(type);\n  };\n\n  const selectSort = sort => {\n    setSelectedSort(sort);\n  };\n\n  useEffect(() => {\n    fetchBoxes().then(data => {\n      box.setBoxes(data.rows);\n    });\n    fetchPostCards().then(data => {\n      postCard.setPostCards(data.rows);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: [/*#__PURE__*/_jsxDEV(SideBar, {\n          select: selectType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(BoxSort, {\n          select: selectSort\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 9,\n        children: [selectedType.name === 'Бокси' ? /*#__PURE__*/_jsxDEV(BoxList, {\n          sort: selectedSort\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 27\n        }, this) : /*#__PURE__*/_jsxDEV(PostCardList, {\n          sort: selectedSort\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"m-auto mt-3\",\n          variant: \"outline-dark\",\n          style: {\n            width: 300\n          },\n          onClick: () => {\n            selectedType.name === 'Бокси' ? setBoxVisible(true) : setPostCardVisible(true);\n          },\n          children: selectedType.name === 'Бокси' ? \"Додати Бокc\" : \"Додати відкритку\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CreateBox, {\n          show: boxVisible,\n          onHide: () => setBoxVisible(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CreatePostCard, {\n          show: postCardVisible,\n          onHide: () => setPostCardVisible(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Main, \"aBOyjLcrnqJITo+7u7dH9R9cW5s=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Main/Projects/weak_app/client/src/pages/Main.js"],"names":["React","useContext","useEffect","useState","Button","Col","Container","FormControl","InputGroup","Row","SideBar","BoxList","CreateBox","Context","fetchBoxes","fetchPostCards","PostCardList","BoxSort","CreatePostCard","Main","selectedSort","setSelectedSort","boxVisible","setBoxVisible","postCardVisible","setPostCardVisible","selectedType","setSelectedType","box","postCard","selectType","type","selectSort","sort","then","data","setBoxes","rows","setPostCards","name","width"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\r\nimport {Button, Col, Container, FormControl, InputGroup, Row} from \"react-bootstrap\";\r\nimport SideBar from \"../components/SideBar\";\r\nimport BoxList from \"../components/BoxList\";\r\nimport CreateBox from \"../components/modals/CreateBox\";\r\nimport {Context} from \"../index\";\r\nimport {fetchBoxes} from \"../http/boxApi\";\r\nimport {fetchPostCards} from \"../http/postCardApi\";\r\nimport PostCardList from \"../components/PostCardList\";\r\nimport BoxSort from \"../components/BoxSort\";\r\nimport CreatePostCard from \"../components/modals/CreatePostCard\";\r\n\r\nconst Main = () => {\r\n\r\n\r\n    const [selectedSort,setSelectedSort] = useState('name')\r\n    const [boxVisible, setBoxVisible] = useState(false)\r\n    const [postCardVisible, setPostCardVisible] = useState(false)\r\n\r\n    const [selectedType, setSelectedType] = useState('')\r\n    const {box} = useContext(Context)\r\n    const {postCard} = useContext(Context)\r\n\r\n    const selectType = (type) =>{\r\n        setSelectedType(type)\r\n    }\r\n\r\n    const selectSort =(sort) =>{\r\n        setSelectedSort(sort)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchBoxes().then(data => {\r\n            box.setBoxes(data.rows)\r\n        })\r\n        fetchPostCards().then(data =>{\r\n            postCard.setPostCards(data.rows)\r\n        })\r\n    },[])\r\n\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col md={3}>\r\n                    <SideBar select = {selectType}/>\r\n                    <BoxSort select ={selectSort}/>\r\n\r\n                </Col>\r\n                <Col md={9}>\r\n                    {selectedType.name === 'Бокси'\r\n                        ? <BoxList sort={selectedSort}/>\r\n                        : <PostCardList sort ={selectedSort}/>}\r\n\r\n\r\n                    <Button\r\n                        className=\"m-auto mt-3\"\r\n                        variant={\"outline-dark\"}\r\n                        style={{width:300}}\r\n                        onClick={()=>{\r\n                            selectedType.name === 'Бокси'\r\n                                ?setBoxVisible(true)\r\n                                :setPostCardVisible(true)\r\n                        }}\r\n                    >\r\n                        {selectedType.name === 'Бокси'?\"Додати Бокc\":\"Додати відкритку\"}\r\n                    </Button>\r\n                    <CreateBox show={boxVisible} onHide={()=> setBoxVisible(false)}/>\r\n                    <CreatePostCard show={postCardVisible} onHide={()=> setPostCardVisible(false)}/>\r\n                </Col>\r\n            </Row>\r\n\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Main;"]},"metadata":{},"sourceType":"module"}