{"ast":null,"code":"var _jsxFileName = \"C:\\\\Main\\\\Projects\\\\weak_app\\\\client\\\\src\\\\components\\\\BoxList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport { Row } from \"react-bootstrap\";\nimport BoxItem from \"./BoxItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BoxList = _s(observer(_c = _s(_ref => {\n  _s();\n\n  let {\n    sort\n  } = _ref;\n  const {\n    box\n  } = useContext(Context);\n  const [sortedBoxes, setSortedBoxes] = useState([]);\n  useEffect(() => {\n    setSortedBoxes(box.boxes);\n    sortBox();\n  }, [sort]);\n\n  function byField(field) {\n    return (a, b) => a[field] > b[field] ? 1 : -1;\n  }\n\n  const sortBox = () => {\n    let resSort = [];\n\n    switch (sort) {\n      case 'price':\n        console.log('price');\n        resSort = box.boxes.sort((a, b) => a.name > b.name ? 1 : -1);\n        console.log(resSort);\n        break;\n\n      default:\n        console.log('name');\n        resSort = box.boxes.sort((a, b) => a.price > b.price ? 1 : -1);\n        console.log(resSort);\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"d-flex mt-5\",\n    children: sortedBoxes.map(box => /*#__PURE__*/_jsxDEV(BoxItem, {\n      box: box\n    }, box.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 13\n  }, this);\n}, \"7tmyFqAcv8gBQRAeAu8CyoheMuA=\")), \"7tmyFqAcv8gBQRAeAu8CyoheMuA=\");\n\n_c2 = BoxList;\nexport default BoxList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BoxList$observer\");\n$RefreshReg$(_c2, \"BoxList\");","map":{"version":3,"sources":["C:/Main/Projects/weak_app/client/src/components/BoxList.js"],"names":["React","useContext","useEffect","useState","observer","Context","Row","BoxItem","BoxList","sort","box","sortedBoxes","setSortedBoxes","boxes","sortBox","byField","field","a","b","resSort","console","log","name","price","map","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAqD,OAArD;AACA,SAAQC,QAAR,QAAuB,iBAAvB;AACA,SAAQC,OAAR,QAAsB,UAAtB;AACA,SAAQC,GAAR,QAAkB,iBAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,OAAO,MAAGJ,QAAQ,SAAE,QAAY;AAAA;;AAAA,MAAX;AAACK,IAAAA;AAAD,GAAW;AAClC,QAAM;AAACC,IAAAA;AAAD,MAAQT,UAAU,CAACI,OAAD,CAAxB;AACA,QAAM,CAACM,WAAD,EAAaC,cAAb,IAA+BT,QAAQ,CAAC,EAAD,CAA7C;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACVU,IAAAA,cAAc,CAACF,GAAG,CAACG,KAAL,CAAd;AAEAC,IAAAA,OAAO;AACV,GAJQ,EAIP,CAACL,IAAD,CAJO,CAAT;;AAMA,WAASM,OAAT,CAAiBC,KAAjB,EAAwB;AACpB,WAAO,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACD,KAAD,CAAD,GAAWE,CAAC,CAACF,KAAD,CAAZ,GAAsB,CAAtB,GAA0B,CAAC,CAA5C;AACH;;AACD,QAAMF,OAAO,GAAG,MAAK;AACjB,QAAIK,OAAO,GAAG,EAAd;;AACA,YAAQV,IAAR;AACI,WAAK,OAAL;AACIW,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAF,QAAAA,OAAO,GAAIT,GAAG,CAACG,KAAJ,CAAUJ,IAAV,CAAe,CAACQ,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACK,IAAF,GAASJ,CAAC,CAACI,IAAX,GAAkB,CAAlB,GAAsB,CAAC,CAAhD,CAAX;AACAF,QAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA;;AACJ;AACIC,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAF,QAAAA,OAAO,GAAKT,GAAG,CAACG,KAAJ,CAAUJ,IAAV,CAAe,CAACQ,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACM,KAAF,GAAUL,CAAC,CAACK,KAAZ,GAAoB,CAApB,GAAwB,CAAC,CAAlD,CAAZ;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA;AAVR;AAYH,GAdD;;AAiBA,sBACQ,QAAC,GAAD;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,cACKR,WAAW,CAACa,GAAZ,CAAgBd,GAAG,iBAChB,QAAC,OAAD;AAAsB,MAAA,GAAG,EAAEA;AAA3B,OAAcA,GAAG,CAACe,EAAlB;AAAA;AAAA;AAAA;AAAA,YADH;AADL;AAAA;AAAA;AAAA;AAAA,UADR;AASH,CAvCuB,kCAAX,iCAAb;;MAAMjB,O;AAyCN,eAAeA,OAAf","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nimport {Row} from \"react-bootstrap\";\r\nimport BoxItem from \"./BoxItem\";\r\n\r\nconst BoxList = observer( ({sort}) => {\r\n    const {box} = useContext(Context)\r\n    const [sortedBoxes,setSortedBoxes] = useState([])\r\n\r\n    useEffect(()=>{\r\n        setSortedBoxes(box.boxes)\r\n\r\n        sortBox()\r\n    },[sort])\r\n\r\n    function byField(field) {\r\n        return (a, b) => a[field] > b[field] ? 1 : -1;\r\n    }\r\n    const sortBox = () =>{\r\n        let resSort = []\r\n        switch (sort) {\r\n            case 'price':\r\n                console.log('price')\r\n                resSort =  box.boxes.sort((a, b) => a.name > b.name ? 1 : -1);\r\n                console.log(resSort)\r\n                break\r\n            default:\r\n                console.log('name')\r\n                resSort =   box.boxes.sort((a, b) => a.price > b.price ? 1 : -1);\r\n                console.log(resSort)\r\n                break\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n            <Row className=\"d-flex mt-5\" >\r\n                {sortedBoxes.map(box =>\r\n                    <BoxItem key={box.id} box={box}/>\r\n                )}\r\n\r\n            </Row>\r\n\r\n    );\r\n});\r\n\r\nexport default BoxList;"]},"metadata":{},"sourceType":"module"}