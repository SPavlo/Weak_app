{"ast":null,"code":"var _jsxFileName = \"C:\\\\Main\\\\Projects\\\\weak_app\\\\client\\\\src\\\\pages\\\\ReportOrder.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Button, Container, Row } from \"react-bootstrap\";\nimport { DateRangePicker } from \"rsuite\";\nimport OrderList from \"../components/OrderList\";\nimport { Context } from \"../index\";\nimport { fetchOrders } from \"../http/orderApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReportOrder = () => {\n  _s();\n\n  const {\n    order\n  } = useContext(Context);\n  const [show, setShow] = useState(false);\n  const [dateRange, setDateRange] = useState([]);\n  const [filteredOrders, setFilteredOrders] = useState([]);\n  const [price, setPrice] = useState(0);\n  const [selfPrice, setSelfPrice] = useState(0);\n  const [boxAmount, setBoxAmount] = useState(0);\n  const [orderAmount, setOrderAmount] = useState(0);\n  const [postCardAmount, setPostCardAmount] = useState(0);\n  const [box, setBox] = useState([]);\n  const [postCard, setPostCard] = useState([]);\n\n  const createTopPostCard = () => {\n    let postCardIds = [];\n    let resPostCard = [];\n    order.filteredoOders.forEach(order => {\n      order.post_cards.forEach(postCard => {\n        if (postCardIds.includes(postCard.id)) {\n          resPostCard = resPostCard.map(i => i.postCard.id === postCard.id ? { ...i,\n            amount: i.amount + 1\n          } : i);\n        } else {\n          postCardIds.push(postCard.id);\n          resPostCard.push({\n            postCard: postCard,\n            amount: 1\n          });\n        }\n      });\n    });\n    console.log(\"Postids\");\n    console.log(postCardIds);\n    console.log(\"resPostCard\");\n    resPostCard.sort((a, b) => a.amount > b.amount ? -1 : 1);\n    console.log(resPostCard);\n  };\n\n  const createTopBox = () => {\n    let boxIds = [];\n    let resBox = [];\n    order.filteredoOders.forEach(order => {\n      order.boxes.forEach(box => {\n        if (boxIds.includes(box.id)) {\n          resBox = resBox.map(i => i.box.id === box.id ? { ...i,\n            amount: i.amount + box.order_box.amount\n          } : i);\n        } else {\n          boxIds.push(box.id);\n          resBox.push({\n            box: box,\n            amount: box.order_box.amount\n          });\n        }\n      });\n    });\n    console.log(\"ids\");\n    console.log(boxIds);\n    console.log(\"resBox\");\n    console.log(resBox);\n    resBox.sort((a, b) => a.amount > b.amount ? -1 : 1);\n    console.log(\"resBox After Sort\");\n    console.log(resBox);\n  };\n\n  const filterOrder = () => {\n    console.log(\"filter:\");\n    let startDate = Date.parse(dateRange[0]) / 100000;\n    let endDate = Date.parse(dateRange[1]) / 100000;\n    order.orders.forEach(i => {\n      let checkDate = Date.parse(i.createdAt) / 100000;\n\n      if (checkDate <= endDate) {\n        if (checkDate >= startDate) order.setFilteredOrders([...order.filteredoOders, i]);\n      }\n    });\n  };\n\n  const calcOrderAmount = () => {\n    let res = 0;\n    order.filteredoOders.forEach(order => res += 1);\n    setOrderAmount(res);\n    return res;\n  };\n\n  const calcBoxAmount = () => {\n    let res = 0;\n    order.filteredoOders.forEach(order => res += order.boxes.length);\n    setBoxAmount(res);\n    return res;\n  };\n\n  const calcPostCardAmount = () => {\n    let res = 0;\n    order.filteredoOders.forEach(order => res += order.post_cards.length);\n    setPostCardAmount(res);\n    return res;\n  };\n\n  const calcPrice = () => {\n    let res = 0;\n    order.filteredoOders.forEach(order => res += order.price);\n    setPrice(res);\n    return res;\n  };\n\n  const calcSelfPrice = () => {};\n\n  const showOrders = () => {\n    order.setFilteredOrders([]);\n    filterOrder();\n    console.log(\"filteredoOders\");\n    console.log(order.filteredoOders);\n    console.log('Кількість замовлень: ' + calcOrderAmount());\n    console.log('Зароблено : ' + calcPrice());\n    console.log('Всього боксів : ' + calcBoxAmount());\n    console.log('Всього відкриток : ' + calcPostCardAmount());\n    createTopBox();\n    createTopPostCard();\n    setShow(true);\n  };\n\n  useEffect(() => {\n    fetchOrders().then(data => {\n      order.setOrders(data.rows);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"d-flex flex-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(DateRangePicker, {\n          showOneCalendar: true,\n          size: \"lg\",\n          appearance: \"subtle\",\n          placeholder: \"\\u041E\\u0431\\u0435\\u0440\\u0456\\u0442\\u044C \\u043F\\u0435\\u0440\\u0456\\u043E\\u0434\",\n          style: {\n            width: 200\n          },\n          value: dateRange,\n          onChange: e => {\n            setDateRange(e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => showOrders(),\n          children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: show ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\u0417\\u0430\\u0440\\u043E\\u0431\\u043B\\u0435\\u043D\\u043E: \", price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\u0412\\u0441\\u044C\\u043E\\u0433\\u043E \\u0431\\u043E\\u043A\\u0441\\u0456\\u0432: \", boxAmount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\u0412\\u0441\\u044C\\u043E\\u0433\\u043E \\u0437\\u0430\\u043C\\u043E\\u0432\\u043B\\u0435\\u043D\\u044C: \", orderAmount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"\\u0412\\u0441\\u044C\\u043E\\u0433\\u043E \\u0432\\u0456\\u0434\\u043A\\u0440\\u0438\\u0442\\u043E\\u043A: \", postCardAmount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 32\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 8\n  }, this);\n};\n\n_s(ReportOrder, \"uHa1GxW7bZjCJjp7/MWPf3fW4/k=\");\n\n_c = ReportOrder;\nexport default ReportOrder;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReportOrder\");","map":{"version":3,"sources":["C:/Main/Projects/weak_app/client/src/pages/ReportOrder.js"],"names":["React","useContext","useEffect","useState","Button","Container","Row","DateRangePicker","OrderList","Context","fetchOrders","ReportOrder","order","show","setShow","dateRange","setDateRange","filteredOrders","setFilteredOrders","price","setPrice","selfPrice","setSelfPrice","boxAmount","setBoxAmount","orderAmount","setOrderAmount","postCardAmount","setPostCardAmount","box","setBox","postCard","setPostCard","createTopPostCard","postCardIds","resPostCard","filteredoOders","forEach","post_cards","includes","id","map","i","amount","push","console","log","sort","a","b","createTopBox","boxIds","resBox","boxes","order_box","filterOrder","startDate","Date","parse","endDate","orders","checkDate","createdAt","calcOrderAmount","res","calcBoxAmount","length","calcPostCardAmount","calcPrice","calcSelfPrice","showOrders","then","data","setOrders","rows","width","e"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\r\nimport {Button, Container, Row} from \"react-bootstrap\";\r\nimport {DateRangePicker} from \"rsuite\";\r\nimport OrderList from \"../components/OrderList\";\r\nimport {Context} from \"../index\";\r\nimport {fetchOrders} from \"../http/orderApi\";\r\n\r\nconst ReportOrder = () => {\r\n\r\n    const {order} = useContext(Context)\r\n\r\n    const [show,setShow] = useState(false)\r\n\r\n    const [dateRange,setDateRange] = useState([])\r\n    const [filteredOrders,setFilteredOrders] = useState([])\r\n    const [price,setPrice] = useState(0)\r\n    const [selfPrice, setSelfPrice] = useState(0)\r\n    const [boxAmount, setBoxAmount] = useState(0)\r\n    const [orderAmount, setOrderAmount] = useState(0)\r\n    const [postCardAmount, setPostCardAmount] = useState(0)\r\n    const [box,setBox] = useState([])\r\n    const [postCard,setPostCard] = useState([])\r\n\r\n\r\n\r\n    const createTopPostCard = () =>{\r\n        let postCardIds = []\r\n        let resPostCard = []\r\n        order.filteredoOders.forEach( order => {\r\n            order.post_cards.forEach(postCard =>{\r\n                if(postCardIds.includes(postCard.id)){\r\n                    resPostCard = resPostCard.map(i => i.postCard.id === postCard.id?{...i,amount:i.amount+1}:i)\r\n                }else {\r\n                    postCardIds.push(postCard.id)\r\n                    resPostCard.push({postCard:postCard, amount:1})\r\n                }\r\n            })\r\n\r\n        } )\r\n        console.log(\"Postids\")\r\n        console.log(postCardIds)\r\n        console.log(\"resPostCard\")\r\n        resPostCard.sort((a, b) => a.amount > b.amount? -1 : 1)\r\n        console.log(resPostCard)\r\n\r\n    }\r\n    const createTopBox = () =>{\r\n        let boxIds = []\r\n        let resBox = []\r\n        order.filteredoOders.forEach( order => {\r\n            order.boxes.forEach(box =>{\r\n                if(boxIds.includes(box.id)){\r\n                    resBox = resBox.map(i => i.box.id === box.id?{...i,amount:i.amount+box.order_box.amount}:i)\r\n                }else {\r\n                    boxIds.push(box.id)\r\n                    resBox.push({box:box, amount:box.order_box.amount})\r\n                }\r\n            })\r\n        } )\r\n        console.log(\"ids\")\r\n        console.log(boxIds)\r\n        console.log(\"resBox\")\r\n        console.log(resBox)\r\n        resBox.sort((a, b) => a.amount > b.amount? -1 : 1)\r\n        console.log(\"resBox After Sort\")\r\n        console.log(resBox)\r\n    }\r\n\r\n\r\n    const filterOrder = () => {\r\n        console.log(\"filter:\")\r\n        let startDate = Date.parse(dateRange[0])/100000\r\n        let endDate = Date.parse(dateRange[1])/100000\r\n        order.orders.forEach( i =>{\r\n            let checkDate = Date.parse(i.createdAt)/100000\r\n            if(checkDate <= endDate){\r\n                if (checkDate >= startDate)\r\n                    order.setFilteredOrders([...order.filteredoOders,i])\r\n\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    const calcOrderAmount = () =>{\r\n        let res = 0\r\n        order.filteredoOders.forEach( order => res+=1)\r\n        setOrderAmount(res)\r\n        return res\r\n    }\r\n\r\n    const calcBoxAmount = () =>{\r\n        let res = 0\r\n        order.filteredoOders.forEach( order => res+= order.boxes.length)\r\n        setBoxAmount(res)\r\n        return res\r\n    }\r\n    const calcPostCardAmount = () =>{\r\n        let res = 0\r\n        order.filteredoOders.forEach( order => res+= order.post_cards.length)\r\n        setPostCardAmount(res)\r\n        return res\r\n    }\r\n    const calcPrice = () =>{\r\n        let res = 0\r\n        order.filteredoOders.forEach( order => res+=order.price)\r\n        setPrice(res)\r\n        return res\r\n    }\r\n\r\n    const calcSelfPrice = () =>{\r\n\r\n    }\r\n\r\n    const  showOrders =  () =>{\r\n        order.setFilteredOrders([])\r\n        filterOrder()\r\n        console.log(\"filteredoOders\")\r\n        console.log(order.filteredoOders)\r\n        console.log( 'Кількість замовлень: ' + calcOrderAmount())\r\n        console.log( 'Зароблено : ' + calcPrice())\r\n        console.log( 'Всього боксів : ' + calcBoxAmount())\r\n        console.log( 'Всього відкриток : ' + calcPostCardAmount())\r\n        createTopBox()\r\n        createTopPostCard()\r\n        setShow(true)\r\n\r\n\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchOrders().then(data => {\r\n            order.setOrders(data.rows)\r\n        })\r\n\r\n    },[])\r\n    return (\r\n       <Container>\r\n           <Row className=\"d-flex flex-column\">\r\n                   <div>\r\n                       <DateRangePicker\r\n                           showOneCalendar\r\n                           size=\"lg\"\r\n                           appearance=\"subtle\"\r\n                           placeholder=\"Оберіть період\"\r\n                           style={{ width: 200 }}\r\n                           value={dateRange}\r\n                           onChange={(e) => {\r\n                               setDateRange(e)\r\n                           }}\r\n                       />\r\n                       <Button\r\n                           onClick={()=> showOrders()}\r\n                       >\r\n                        Показати\r\n                       </Button>\r\n\r\n                   </div>\r\n                   <div>\r\n                       {show\r\n                           ?<div>\r\n                               <div>Зароблено: {price}</div>\r\n                               <div>Всього боксів: {boxAmount}</div>\r\n                               <div>Всього замовлень: {orderAmount}</div>\r\n                               <div>Всього відкриток: {postCardAmount}</div>\r\n\r\n                               <div></div>\r\n                           </div>:<div></div>}\r\n\r\n\r\n               </div>\r\n           </Row>\r\n       </Container>\r\n    );\r\n};\r\n\r\nexport default ReportOrder;"]},"metadata":{},"sourceType":"module"}