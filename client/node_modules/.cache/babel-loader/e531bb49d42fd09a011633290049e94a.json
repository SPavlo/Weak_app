{"ast":null,"code":"var _jsxFileName = \"C:\\\\Main\\\\Projects\\\\weak_app\\\\client\\\\src\\\\components\\\\BoxList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport { Col, FormControl, InputGroup, Row } from \"react-bootstrap\";\nimport BoxItem from \"./BoxItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BoxList = _s(observer(_c = _s(_ref => {\n  _s();\n\n  let {\n    sort\n  } = _ref;\n  const {\n    box\n  } = useContext(Context);\n  useEffect(() => {\n    sortBox();\n  }, [sort]);\n  const [selectedSort, setSelectedSort] = useState('name');\n\n  const selectSort = sort => {\n    setSelectedSort(sort);\n  };\n\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchedBox, setSearchedBox] = useState([]);\n\n  const searchBoxList = () => {\n    setSearchedBox(box.boxes.filter(box => box.name.toLowerCase().includes(searchQuery.toLowerCase())));\n  };\n\n  const sortBox = () => {\n    let resSort = box.boxes.sort((a, b) => a[sort] > b[sort] ? 1 : -1);\n    console.log('sorting...');\n    return resSort;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"d-flex mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        placeholder: \"\\u041F\\u043E\\u0448\\u0443\\u043A..\",\n        value: searchQuery,\n        onChange: event => {\n          setSearchQuery(event.target.value);\n          searchBoxList();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this), searchQuery ? searchedBox.map(box => /*#__PURE__*/_jsxDEV(BoxItem, {\n      box: box\n    }, box.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }, this)) : box.boxes.map(box => /*#__PURE__*/_jsxDEV(BoxItem, {\n      box: box\n    }, box.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 13\n  }, this);\n}, \"8iOvRdwhRQoalQy+oMLMPKhstG8=\")), \"8iOvRdwhRQoalQy+oMLMPKhstG8=\");\n\n_c2 = BoxList;\nexport default BoxList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BoxList$observer\");\n$RefreshReg$(_c2, \"BoxList\");","map":{"version":3,"sources":["C:/Main/Projects/weak_app/client/src/components/BoxList.js"],"names":["React","useContext","useEffect","useState","observer","Context","Col","FormControl","InputGroup","Row","BoxItem","BoxList","sort","box","sortBox","selectedSort","setSelectedSort","selectSort","searchQuery","setSearchQuery","searchedBox","setSearchedBox","searchBoxList","boxes","filter","name","toLowerCase","includes","resSort","a","b","console","log","event","target","value","map","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAqD,OAArD;AACA,SAAQC,QAAR,QAAuB,iBAAvB;AACA,SAAQC,OAAR,QAAsB,UAAtB;AACA,SAAQC,GAAR,EAAaC,WAAb,EAA0BC,UAA1B,EAAsCC,GAAtC,QAAgD,iBAAhD;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,OAAO,MAAGP,QAAQ,SAAE,QAAY;AAAA;;AAAA,MAAX;AAACQ,IAAAA;AAAD,GAAW;AAClC,QAAM;AAACC,IAAAA;AAAD,MAAQZ,UAAU,CAACI,OAAD,CAAxB;AAEAH,EAAAA,SAAS,CAAC,MAAI;AACVY,IAAAA,OAAO;AAEV,GAHQ,EAGP,CAACF,IAAD,CAHO,CAAT;AAKA,QAAM,CAACG,YAAD,EAAcC,eAAd,IAAiCb,QAAQ,CAAC,MAAD,CAA/C;;AACA,QAAMc,UAAU,GAAGL,IAAD,IAAS;AACvBI,IAAAA,eAAe,CAACJ,IAAD,CAAf;AACH,GAFD;;AAIA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACiB,WAAD,EAAcC,cAAd,IAAgClB,QAAQ,CAAC,EAAD,CAA9C;;AAEA,QAAMmB,aAAa,GAAG,MAAK;AACvBD,IAAAA,cAAc,CAACR,GAAG,CAACU,KAAJ,CAAUC,MAAV,CAAiBX,GAAG,IAAIA,GAAG,CAACY,IAAJ,CAASC,WAAT,GAAuBC,QAAvB,CAAgCT,WAAW,CAACQ,WAAZ,EAAhC,CAAxB,CAAD,CAAd;AACH,GAFD;;AAIA,QAAMZ,OAAO,GAAG,MAAK;AACjB,QAAIc,OAAO,GAAIf,GAAG,CAACU,KAAJ,CAAUX,IAAV,CAAe,CAACiB,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACjB,IAAD,CAAD,GAAUkB,CAAC,CAAClB,IAAD,CAAX,GAAoB,CAApB,GAAwB,CAAC,CAAlD,CAAf;AACAmB,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,WAAOJ,OAAP;AACH,GAJD;;AAOA,sBACQ,QAAC,GAAD;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACI,QAAC,UAAD;AAAY,MAAA,SAAS,EAAC,MAAtB;AAAA,6BACI,QAAC,WAAD;AACI,QAAA,WAAW,EAAC,kCADhB;AAEI,QAAA,KAAK,EAAEV,WAFX;AAGI,QAAA,QAAQ,EAAEe,KAAK,IAAI;AACfd,UAAAA,cAAc,CAACc,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;AACAb,UAAAA,aAAa;AAChB;AANL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,EAaKJ,WAAW,GAACE,WAAW,CAACgB,GAAZ,CAAgBvB,GAAG,iBAC5B,QAAC,OAAD;AAAsB,MAAA,GAAG,EAAEA;AAA3B,OAAcA,GAAG,CAACwB,EAAlB;AAAA;AAAA;AAAA;AAAA,YADS,CAAD,GAEVxB,GAAG,CAACU,KAAJ,CAAUa,GAAV,CAAcvB,GAAG,iBACf,QAAC,OAAD;AAAsB,MAAA,GAAG,EAAEA;AAA3B,OAAcA,GAAG,CAACwB,EAAlB;AAAA;AAAA;AAAA;AAAA,YADF,CAfN;AAAA;AAAA;AAAA;AAAA;AAAA,UADR;AAwBH,CAnDuB,kCAAX,iCAAb;;MAAM1B,O;AAqDN,eAAeA,OAAf","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nimport {Col, FormControl, InputGroup, Row} from \"react-bootstrap\";\r\nimport BoxItem from \"./BoxItem\";\r\n\r\nconst BoxList = observer( ({sort}) => {\r\n    const {box} = useContext(Context)\r\n\r\n    useEffect(()=>{\r\n        sortBox()\r\n\r\n    },[sort])\r\n\r\n    const [selectedSort,setSelectedSort] = useState('name')\r\n    const selectSort =(sort) =>{\r\n        setSelectedSort(sort)\r\n    }\r\n    \r\n    const [searchQuery, setSearchQuery] = useState('')\r\n    const [searchedBox, setSearchedBox] = useState([])\r\n\r\n    const searchBoxList = () =>{\r\n        setSearchedBox(box.boxes.filter(box => box.name.toLowerCase().includes(searchQuery.toLowerCase())))\r\n    }\r\n\r\n    const sortBox = () =>{\r\n        let resSort =  box.boxes.sort((a, b) => a[sort] > b[sort] ? 1 : -1);\r\n        console.log('sorting...')\r\n        return resSort\r\n    }\r\n\r\n\r\n    return (\r\n            <Row className=\"d-flex mt-5\" >\r\n                <InputGroup className=\"mb-3\">\r\n                    <FormControl\r\n                        placeholder=\"Пошук..\"\r\n                        value={searchQuery}\r\n                        onChange={event => {\r\n                            setSearchQuery(event.target.value)\r\n                            searchBoxList()\r\n                        }}\r\n\r\n                    />\r\n\r\n                </InputGroup>\r\n                {searchQuery?searchedBox.map(box =>\r\n                    <BoxItem key={box.id} box={box}/>\r\n                ):box.boxes.map(box =>\r\n                    <BoxItem key={box.id} box={box}/>\r\n                    )\r\n                }\r\n\r\n            </Row>\r\n\r\n    );\r\n});\r\n\r\nexport default BoxList;"]},"metadata":{},"sourceType":"module"}