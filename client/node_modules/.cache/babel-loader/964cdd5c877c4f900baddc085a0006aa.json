{"ast":null,"code":"var _jsxFileName = \"C:\\\\Main\\\\Projects\\\\weak_app\\\\client\\\\src\\\\components\\\\OrderList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport { Row } from \"react-bootstrap\";\nimport OrderItem from \"./OrderItem\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ORDER_ROUTE } from \"../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OrderList = _s(observer(_c = _s(_ref => {\n  _s();\n\n  let {\n    dateRange\n  } = _ref;\n  const {\n    order\n  } = useContext(Context);\n  const navigate = useNavigate();\n  const [filteredOrders, setFilteredOrders] = useState([]);\n\n  if (dateRange) {\n    let startDate = Date.parse(dateRange[0]);\n    let endDate = Date.parse(dateRange[1]);\n    order.orders.forEach(i => {\n      let checkDate = Date.parse(i.createdAt);\n\n      if (checkDate => startDate && checkDate <= endDate) {\n        setFilteredOrders([...filteredOrders, i]);\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"d-flex mt-5\",\n    children: dateRange ? filteredOrders.map(orderCur => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => navigate(ORDER_ROUTE + '/' + orderCur.id),\n      style: {\n        cursor: \"pointer\"\n      },\n      children: /*#__PURE__*/_jsxDEV(OrderItem, {\n        orderCur: orderCur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }, this)\n    }, orderCur.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }, this)) : order.orders.map(orderCur => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => navigate(ORDER_ROUTE + '/' + orderCur.id),\n      style: {\n        cursor: \"pointer\"\n      },\n      children: /*#__PURE__*/_jsxDEV(OrderItem, {\n        orderCur: orderCur\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)\n    }, orderCur.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}, \"zPa2+kL2dfdQUA/+aSLcH2qDXp4=\", false, function () {\n  return [useNavigate];\n})), \"zPa2+kL2dfdQUA/+aSLcH2qDXp4=\", false, function () {\n  return [useNavigate];\n});\n\n_c2 = OrderList;\nexport default OrderList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"OrderList$observer\");\n$RefreshReg$(_c2, \"OrderList\");","map":{"version":3,"sources":["C:/Main/Projects/weak_app/client/src/components/OrderList.js"],"names":["React","useContext","useState","observer","Context","Row","OrderItem","useNavigate","ORDER_ROUTE","OrderList","dateRange","order","navigate","filteredOrders","setFilteredOrders","startDate","Date","parse","endDate","orders","forEach","i","checkDate","createdAt","map","orderCur","id","cursor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,SAAQC,QAAR,QAAuB,iBAAvB;AACA,SAAQC,OAAR,QAAsB,UAAtB;AACA,SAAQC,GAAR,QAAkB,iBAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,SAAQC,WAAR,QAA0B,UAA1B;;;AAEA,MAAMC,SAAS,MAAGN,QAAQ,SAAE,QAAiB;AAAA;;AAAA,MAAhB;AAACO,IAAAA;AAAD,GAAgB;AACzC,QAAM;AAACC,IAAAA;AAAD,MAAUV,UAAU,CAACG,OAAD,CAA1B;AACA,QAAMQ,QAAQ,GAAGL,WAAW,EAA5B;AAEA,QAAM,CAACM,cAAD,EAAgBC,iBAAhB,IAAqCZ,QAAQ,CAAC,EAAD,CAAnD;;AAEA,MAAGQ,SAAH,EAAa;AACT,QAAIK,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWP,SAAS,CAAC,CAAD,CAApB,CAAhB;AACA,QAAIQ,OAAO,GAAGF,IAAI,CAACC,KAAL,CAAWP,SAAS,CAAC,CAAD,CAApB,CAAd;AAEAC,IAAAA,KAAK,CAACQ,MAAN,CAAaC,OAAb,CAAsBC,CAAC,IAAG;AACtB,UAAIC,SAAS,GAAGN,IAAI,CAACC,KAAL,CAAWI,CAAC,CAACE,SAAb,CAAhB;;AACA,UAAGD,SAAS,IAAIP,SAAS,IAAIO,SAAS,IAAIJ,OAA1C,EAAkD;AAC9CJ,QAAAA,iBAAiB,CAAC,CAAC,GAAGD,cAAJ,EAAmBQ,CAAnB,CAAD,CAAjB;AACH;AACJ,KALD;AAMH;;AAED,sBACI,QAAC,GAAD;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,cAEKX,SAAS,GACLG,cAAc,CAACW,GAAf,CAAmBC,QAAQ,iBACxB;AAEI,MAAA,OAAO,EAAE,MAAMb,QAAQ,CAACJ,WAAW,GAAG,GAAd,GAAoBiB,QAAQ,CAACC,EAA9B,CAF3B;AAGI,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAC;AAAR,OAHX;AAAA,6BAKI,QAAC,SAAD;AACI,QAAA,QAAQ,EAAEF;AADd;AAAA;AAAA;AAAA;AAAA;AALJ,OACSA,QAAQ,CAACC,EADlB;AAAA;AAAA;AAAA;AAAA,YADH,CADK,GAaLf,KAAK,CAACQ,MAAN,CAAaK,GAAb,CAAiBC,QAAQ,iBAC1B;AAEI,MAAA,OAAO,EAAE,MAAMb,QAAQ,CAACJ,WAAW,GAAG,GAAd,GAAoBiB,QAAQ,CAACC,EAA9B,CAF3B;AAGI,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAC;AAAR,OAHX;AAAA,6BAKI,QAAC,SAAD;AACI,QAAA,QAAQ,EAAEF;AADd;AAAA;AAAA;AAAA;AAAA;AALJ,OACSA,QAAQ,CAACC,EADlB;AAAA;AAAA;AAAA;AAAA,YADC;AAfT;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH,CAlDyB;AAAA,UAELnB,WAFK;AAAA,GAAX;AAAA,UAEMA,WAFN;AAAA,EAAf;;MAAME,S;AAoDN,eAAeA,SAAf","sourcesContent":["import React, {useContext, useState} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nimport {Row} from \"react-bootstrap\";\r\nimport OrderItem from \"./OrderItem\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {ORDER_ROUTE} from \"../utils\";\r\n\r\nconst OrderList = observer( ({dateRange}) => {\r\n    const {order} = useContext(Context)\r\n    const navigate = useNavigate()\r\n\r\n    const [filteredOrders,setFilteredOrders] = useState([])\r\n\r\n    if(dateRange){\r\n        let startDate = Date.parse(dateRange[0])\r\n        let endDate = Date.parse(dateRange[1])\r\n\r\n        order.orders.forEach( i =>{\r\n            let checkDate = Date.parse(i.createdAt)\r\n            if(checkDate => startDate && checkDate <= endDate){\r\n                setFilteredOrders([...filteredOrders,i])\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Row className=\"d-flex mt-5\" >\r\n\r\n            {dateRange\r\n                ?filteredOrders.map(orderCur =>\r\n                    <div\r\n                        key={orderCur.id}\r\n                        onClick={() => navigate(ORDER_ROUTE + '/' + orderCur.id)}\r\n                        style={{cursor:\"pointer\"}}\r\n                    >\r\n                        <OrderItem\r\n                            orderCur={orderCur}\r\n                        />\r\n                    </div>\r\n\r\n                )\r\n                :order.orders.map(orderCur =>\r\n                <div\r\n                    key={orderCur.id}\r\n                    onClick={() => navigate(ORDER_ROUTE + '/' + orderCur.id)}\r\n                    style={{cursor:\"pointer\"}}\r\n                >\r\n                    <OrderItem\r\n                        orderCur={orderCur}\r\n                    />\r\n                </div>\r\n\r\n            )}\r\n\r\n        </Row>\r\n\r\n    );\r\n});\r\n\r\nexport default OrderList;"]},"metadata":{},"sourceType":"module"}