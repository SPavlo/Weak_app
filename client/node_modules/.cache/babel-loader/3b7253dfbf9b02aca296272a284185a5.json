{"ast":null,"code":"var _jsxFileName = \"C:\\\\Main\\\\Projects\\\\weak_app\\\\client\\\\src\\\\components\\\\modals\\\\CreateOrder.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Form, Modal, Button, Row, Col, Dropdown, Container, ModalBody, ModalTitle, Card, InputGroup, FormControl } from \"react-bootstrap\";\nimport { createBox, fetchBoxes, fetchOneBox, updateBox } from \"../../http/boxApi\";\nimport { useLocation, useNavigate, useParams } from \"react-router-dom\";\nimport { BOXPAGE_ROUTE } from \"../../utils\";\nimport { login } from \"../../http/userApi\";\nimport data from \"bootstrap/js/src/dom/data\";\nimport { Context } from \"../../index\";\nimport ModalHeader from \"react-bootstrap/ModalHeader\";\nimport { fetchPostCards } from \"../../http/postCardApi\";\nimport { createOrder, updateOrder } from \"../../http/orderApi\";\nimport MyAlert from \"../MyAlert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateOrder = _ref => {\n  _s();\n\n  let {\n    show,\n    onHide,\n    curOrder,\n    isUpd\n  } = _ref;\n  const {\n    order\n  } = useContext(Context);\n  const {\n    box\n  } = useContext(Context);\n  const {\n    postCard\n  } = useContext(Context);\n  const [searchedBox, setSearchedBox] = useState([]);\n  const [searchedPostCard, setSearchedPostCard] = useState([]);\n  const [showAlert, setShowAlert] = useState(false);\n  const [chosenBox, setChosenBox] = useState([]);\n  const [chosenPostCard, setChosenPostCard] = useState([]);\n  const [price, setPrice] = useState('');\n  const [clientName, setClientName] = useState('');\n  const [clientPhone, setClientPhone] = useState('');\n  const [dateToSend, setDateToSend] = useState('');\n  const [city, setCity] = useState('');\n  const [department, setDepartment] = useState('');\n  const [postCardText, setPostCardText] = useState('');\n  const [comment, setComment] = useState('');\n  const [status, setStatus] = useState(null);\n  const [paymentStatus, setPaymentStatus] = useState(null);\n  const [searchQueryBox, setSearchQueryBox] = useState('');\n  const [searchQueryPostCard, setSearchQueryPostCard] = useState('');\n\n  const onUpd = () => {\n    console.log('upd ');\n    setPrice(curOrder.price);\n    setClientName(curOrder.client_name);\n    setClientPhone(curOrder.client_phone);\n    setDateToSend(curOrder.date_to_send);\n    setCity(curOrder.city);\n    setDepartment(curOrder.department);\n    setPostCardText(curOrder.post_card_text);\n    setComment(curOrder.comment);\n    setStatus(curOrder.status);\n    setPaymentStatus(curOrder.payment_status);\n  };\n\n  const [boxModalVisible, setBoxModalVisible] = useState(false);\n  const [postCardModalVisible, setPostCardBoxModalVisible] = useState(false);\n\n  const refreshAndHide = () => {\n    setStatus(null);\n    setPaymentStatus(null);\n    setPrice();\n    setClientName('');\n    setClientPhone('');\n    setDateToSend('');\n    setCity('');\n    setDepartment('');\n    setPostCardText('');\n    setComment('');\n    setChosenBox([]);\n    setChosenPostCard([]);\n    onHide();\n  };\n\n  const changeChosenBox = (key, value, number) => {\n    setChosenBox(chosenBox.map(i => i.number === number ? { ...i,\n      [key]: value\n    } : i));\n  };\n\n  const changeChosenPostCard = (key, value, number) => {\n    setChosenPostCard(chosenPostCard.map(i => i.number === number ? { ...i,\n      [key]: value\n    } : i));\n  };\n\n  const addOrder = () => {\n    console.log('CreateOrder');\n    const formData = new FormData();\n    formData.append('client_name', clientName);\n    if (clientPhone) formData.append('client_phone', clientPhone);\n    if (dateToSend) formData.append('date_to_send', dateToSend);\n    if (city) formData.append('city', city);\n    if (department) formData.append('department', department);\n    if (postCardText) formData.append('post_card_text', postCardText);\n    if (comment) formData.append('comment', comment);\n    const orderBoxes = [];\n    const orderPostCards = [];\n    chosenBox.forEach(box => {\n      orderBoxes.push({\n        id: box.box.id,\n        amount: box.amount\n      });\n    });\n    chosenPostCard.forEach(postCard => {\n      orderPostCards.push({\n        id: postCard.postCard.id,\n        amount: postCard.amount\n      });\n    });\n    console.log(orderBoxes);\n    console.log(orderPostCards);\n    formData.append('price', `${price}`);\n    formData.append('status', status);\n    formData.append('payment_status', paymentStatus);\n    formData.append('orderBoxes', JSON.stringify(orderBoxes));\n    formData.append('orderPostCards', JSON.stringify(orderPostCards));\n\n    if (isUpd) {\n      console.log('updating');\n      updateOrder(curOrder.id, formData).then(data => refreshAndHide());\n    } else {\n      console.log('creating');\n      createOrder(formData).then(data => refreshAndHide());\n    }\n  };\n\n  const checkPostCard = postCard => {\n    let res = true;\n    chosenPostCard.forEach(i => {\n      if (i.postCard.id === postCard.id) {\n        res = false;\n      }\n    });\n    return res;\n  };\n\n  const addChosenPostCard = postCard => {\n    const isUniq = checkPostCard(postCard);\n\n    if (isUniq) {\n      setChosenPostCard([...chosenPostCard, {\n        postCard: postCard,\n        amount: 1,\n        number: Date.now()\n      }]);\n      setPostCardBoxModalVisible(false);\n    } else {\n      setShowAlert(true);\n    }\n  };\n\n  const checkBox = box => {\n    let res = true;\n    chosenBox.forEach(i => {\n      if (i.box.id === box.id) {\n        res = false;\n      }\n    });\n    return res;\n  };\n\n  const addChosenBox = box => {\n    const isUniq = checkBox(box);\n\n    if (isUniq) {\n      setChosenBox([...chosenBox, {\n        box: box,\n        amount: 1,\n        number: Date.now()\n      }]);\n      setBoxModalVisible(false);\n    } else {\n      setShowAlert(true);\n    }\n  };\n\n  const removeChosenBox = id => {\n    setChosenBox(chosenBox.filter(i => i.box.id !== id));\n  };\n\n  const removeChosenPostCard = id => {\n    setChosenPostCard(chosenPostCard.filter(i => i.postCard.id !== id));\n  };\n\n  const showBoxModal = () => {\n    fetchBoxes().then(data => {\n      box.setBoxes(data.rows);\n      setSearchedBox(box.boxes);\n      setBoxModalVisible(true);\n    });\n  };\n\n  const showPostCardModal = () => {\n    fetchPostCards().then(data => {\n      postCard.setPostCards(data.rows);\n      setSearchedPostCard(postCard.postCards);\n      setPostCardBoxModalVisible(true);\n    });\n  };\n\n  const searchBoxList = () => {\n    setSearchedBox(box.boxes.filter(box => box.name.toLowerCase().includes(searchQueryBox.toLowerCase())));\n  };\n\n  const searchPostCardList = () => {\n    setSearchedPostCard(postCard.postCards.filter(postCard => postCard.name.toLowerCase().includes(searchQueryPostCard.toLowerCase())));\n  };\n\n  const calcPrice = () => {\n    let res = 0;\n    chosenBox.forEach(box => res += box.box.price * box.amount);\n    chosenPostCard.forEach(postCard => res += postCard.postCard.price * postCard.amount);\n    setPrice(res);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: refreshAndHide,\n      size: \"lg\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"contained-modal-title-vcenter\",\n          children: isUpd ? 'Редагувати' : 'Додати замовлення'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [isUpd ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"red\"\n          },\n          children: \"*\\u041F\\u0440\\u0438 \\u0434\\u043E\\u0434\\u0430\\u0432\\u0430\\u043D\\u043D\\u0456 \\u0434\\u043E \\u0437\\u0430\\u043C\\u043E\\u0432\\u043B\\u0435\\u043D\\u043D\\u044F \\u043D\\u043E\\u0432\\u043E\\u0433\\u043E \\u0431\\u043E\\u043A\\u0441\\u0443 \\u0447\\u0438 \\u0434\\u0435\\u043A\\u043E\\u0440\\u0443, \\u0456\\u0441\\u043D\\u0443\\u044E\\u0447\\u0456 \\u0431\\u0443\\u0434\\u0435 \\u0432\\u0438\\u0434\\u0430\\u043B\\u0435\\u043D\\u043E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 22\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-column\",\n          children: [chosenBox.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 26\n          }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              marginLeft: 30\n            },\n            children: \"\\u0411\\u043E\\u043A\\u0441\\u0438:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 27\n          }, this), chosenBox.map(box => {\n            return /*#__PURE__*/_jsxDEV(Row, {\n              className: \"d-flex align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                md: 5,\n                children: /*#__PURE__*/_jsxDEV(Card, {\n                  style: {\n                    width: 200,\n                    height: 280\n                  },\n                  className: \"m-2 p-0\",\n                  children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                    variant: \"top\",\n                    src: process.env.REACT_APP_API_URL + box.box.img,\n                    height: 200\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                    style: {\n                      fontSize: 12\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Card.Title, {\n                      children: box.box.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 256,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 25\n                  }, this)]\n                }, box.box.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                md: 5,\n                className: \"d-flex flex-column\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    fontSize: 20,\n                    marginBottom: 20\n                  },\n                  children: \"\\u041A\\u0456\\u043B\\u044C\\u043A\\u0456\\u0441\\u0442\\u044C \\u0431\\u043E\\u043A\\u0441\\u0456\\u0432:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                  size: \"lg\",\n                  className: \"mb-3\",\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    style: {\n                      width: 50\n                    },\n                    placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0456\\u0442\\u044C \\u043A\\u0456\\u043B\\u044C\\u043A\\u0456\\u0441\\u0442\\u044C..\",\n                    type: \"number\",\n                    value: box.amount,\n                    onChange: e => changeChosenBox('amount', e.target.value, box.number)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  style: {\n                    width: 150\n                  },\n                  variant: \"outline-danger\",\n                  onClick: () => removeChosenBox(box.box.id),\n                  children: \"\\u0412\\u0438\\u0434\\u0430\\u043B\\u0438\\u0442\\u0438\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 25\n              }, this)]\n            }, box.box.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 31\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-column\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: showBoxModal,\n            className: \"mt-3\",\n            children: \"\\u0414\\u043E\\u0434\\u0430\\u0442\\u0438 \\u0411\\u043E\\u043A\\u0441\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 21\n          }, this), chosenPostCard.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 26\n          }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              marginLeft: 30,\n              marginTop: 30\n            },\n            children: \"\\u0414\\u0435\\u043A\\u043E\\u0440:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 27\n          }, this), chosenPostCard.map(postCard => /*#__PURE__*/_jsxDEV(Row, {\n            className: \"d-flex align-items-center\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: 5,\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                style: {\n                  width: 200,\n                  height: 280\n                },\n                className: \"m-2 p-0\",\n                children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                  variant: \"top\",\n                  src: process.env.REACT_APP_API_URL + postCard.postCard.img,\n                  height: 200\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                  style: {\n                    fontSize: 12\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Card.Title, {\n                    children: postCard.postCard.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 302,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 37\n                }, this)]\n              }, postCard.postCard.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 5,\n              className: \"d-flex flex-column\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontSize: 20,\n                  marginBottom: 20\n                },\n                children: \"\\u041A\\u0456\\u043B\\u044C\\u043A\\u0456\\u0441\\u0442\\u044C:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                size: \"lg\",\n                className: \"mb-3\",\n                children: /*#__PURE__*/_jsxDEV(FormControl, {\n                  style: {\n                    width: 50\n                  },\n                  placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0456\\u0442\\u044C \\u043A\\u0456\\u043B\\u044C\\u043A\\u0456\\u0441\\u0442\\u044C..\",\n                  type: \"number\",\n                  value: postCard.amount,\n                  onChange: e => changeChosenPostCard('amount', e.target.value, postCard.number)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  width: 150\n                },\n                variant: \"outline-danger\",\n                onClick: () => removeChosenPostCard(postCard.postCard.id),\n                children: \"\\u0412\\u0438\\u0434\\u0430\\u043B\\u0438\\u0442\\u0438\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 29\n            }, this)]\n          }, postCard.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 25\n          }, this)), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: showPostCardModal,\n            className: \"mt-3\",\n            children: \"\\u0414\\u043E\\u0434\\u0430\\u0442\\u0438 \\u0414\\u0435\\u043A\\u043E\\u0440\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n            className: \"mt-3\",\n            onChange: e => setClientName(e.target.value),\n            placeholder: \"Введіть ім'я клієнта\",\n            value: clientName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            className: \"mt-3\",\n            onChange: e => setClientPhone(e.target.value),\n            placeholder: \"Введіть телефон клієнта\",\n            type: \"phone\",\n            value: clientPhone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            className: \"mt-3\",\n            onChange: e => setDateToSend(e.target.value),\n            placeholder: \"Введіть дату відправки\",\n            value: dateToSend\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            className: \"mt-3\",\n            onChange: e => setCity(e.target.value),\n            placeholder: \"Введіть місто доставки\",\n            value: city\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            className: \"mt-3\",\n            onChange: e => setDepartment(e.target.value),\n            placeholder: \"Введіть відділення  НП\",\n            value: department\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 21\n          }, this), chosenPostCard.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 26\n          }, this) : /*#__PURE__*/_jsxDEV(Form.Control, {\n            className: \"mt-3\",\n            onChange: e => setPostCardText(e.target.value),\n            placeholder: \"Коментар до декору\",\n            value: postCardText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            className: \"mt-3\",\n            onChange: e => setComment(e.target.value),\n            placeholder: \"Коментар\",\n            value: comment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"d-flex justify-content-between align-items-center\",\n            style: {\n              marginTop: 20,\n              marginLeft: 0\n            },\n            children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n              style: {\n                width: 620\n              },\n              onChange: e => setPrice(Number(e.target.value)),\n              placeholder: \"Введіть ціну\",\n              type: \"number\",\n              value: price\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                width: 150\n              },\n              variant: \"outline-primary\",\n              onClick: calcPrice,\n              children: \"\\u0420\\u043E\\u0437\\u0440\\u0430\\u0445\\u0443\\u0432\\u0430\\u0442\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            className: \"mt-3\",\n            children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n              children: status || \"Оберіть стан замовлення\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n              children: order.status.map(status => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: () => setStatus(status.title),\n                children: status.title\n              }, status.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 33\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            className: \"mt-3\",\n            children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n              children: paymentStatus || \"Оберіть стан оплати\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n              children: order.paymentStatus.map(paymentStat => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: () => setPaymentStatus(paymentStat.title),\n                children: paymentStat.title\n              }, paymentStat.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 33\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-danger\",\n          onClick: refreshAndHide,\n          children: \"\\u0417\\u0430\\u043A\\u0440\\u0438\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-success\",\n          onClick: addOrder,\n          children: isUpd ? \"Зберегти\" : \"Додати\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: boxModalVisible,\n      onHide: () => {\n        setBoxModalVisible(false);\n        setSearchQueryBox('');\n      },\n      size: \"lg\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(ModalTitle, {\n          children: \"\\u0414\\u043E\\u0434\\u0430\\u0442\\u0438 \\u0411\\u043E\\u043A\\u0441\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        style: {\n          minHeight: 500\n        },\n        children: [/*#__PURE__*/_jsxDEV(MyAlert, {\n          show: showAlert,\n          setShow: setShowAlert\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            placeholder: \"\\u041F\\u043E\\u0448\\u0443\\u043A..\",\n            value: searchQueryBox,\n            onChange: event => {\n              setSearchQueryBox(event.target.value);\n              searchBoxList();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"d-flex justify-content-around\",\n          children: searchedBox.length === 0 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"d-flex justify-content-center \",\n            children: \"\\u041D\\u0456\\u0447\\u043E\\u0433\\u043E \\u043D\\u0435 \\u0437\\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u043E(\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 26\n          }, this) : searchedBox.map(box => /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              width: 300\n            },\n            className: \"m-2 p-0\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: process.env.REACT_APP_API_URL + box.img,\n              width: 300,\n              height: 300\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: box.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 484,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [box.price, \" \\u0433\\u0440\\u043D\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => {\n                  addChosenBox(box);\n                },\n                variant: \"primary\",\n                children: \"\\u0414\\u043E\\u0434\\u0430\\u0442\\u0438\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 29\n            }, this)]\n          }, box.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-danger\",\n          onClick: () => setBoxModalVisible(false),\n          children: \"\\u0417\\u0430\\u043A\\u0440\\u0438\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: postCardModalVisible,\n      onHide: () => {\n        setPostCardBoxModalVisible(false);\n        setSearchQueryPostCard('');\n      },\n      size: \"lg\",\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(ModalTitle, {\n          children: \"\\u0414\\u043E\\u0434\\u0430\\u0442\\u0438 \\u0414\\u0435\\u043A\\u043E\\u0440\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: [/*#__PURE__*/_jsxDEV(MyAlert, {\n          show: showAlert,\n          setShow: setShowAlert\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            placeholder: \"\\u041F\\u043E\\u0448\\u0443\\u043A..\",\n            value: searchQueryPostCard,\n            onChange: event => {\n              setSearchQueryPostCard(event.target.value);\n              searchPostCardList();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"d-flex justify-content-around\",\n          children: searchedPostCard.length === 0 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"d-flex justify-content-center \",\n            children: \"\\u041D\\u0456\\u0447\\u043E\\u0433\\u043E \\u043D\\u0435 \\u0437\\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u043E(\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 30\n          }, this) : searchedPostCard.map(postCard => /*#__PURE__*/_jsxDEV(Card, {\n            style: {\n              width: 300\n            },\n            className: \"m-2 p-0\",\n            children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n              variant: \"top\",\n              src: process.env.REACT_APP_API_URL + postCard.img,\n              width: 300,\n              height: 300\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: postCard.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 543,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [postCard.price, \" \\u0433\\u0440\\u043D\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 544,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                onClick: () => addChosenPostCard(postCard),\n                variant: \"primary\",\n                children: \"\\u0414\\u043E\\u0434\\u0430\\u0442\\u0438\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 547,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 33\n            }, this)]\n          }, postCard.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 521,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-danger\",\n          onClick: () => setPostCardBoxModalVisible(false),\n          children: \"\\u0417\\u0430\\u043A\\u0440\\u0438\\u0442\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateOrder, \"Nk6ffMAM6VHBib9ahxaeaYFYH2M=\");\n\n_c = CreateOrder;\nexport default CreateOrder;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateOrder\");","map":{"version":3,"sources":["C:/Main/Projects/weak_app/client/src/components/modals/CreateOrder.js"],"names":["React","useContext","useEffect","useState","Form","Modal","Button","Row","Col","Dropdown","Container","ModalBody","ModalTitle","Card","InputGroup","FormControl","createBox","fetchBoxes","fetchOneBox","updateBox","useLocation","useNavigate","useParams","BOXPAGE_ROUTE","login","data","Context","ModalHeader","fetchPostCards","createOrder","updateOrder","MyAlert","CreateOrder","show","onHide","curOrder","isUpd","order","box","postCard","searchedBox","setSearchedBox","searchedPostCard","setSearchedPostCard","showAlert","setShowAlert","chosenBox","setChosenBox","chosenPostCard","setChosenPostCard","price","setPrice","clientName","setClientName","clientPhone","setClientPhone","dateToSend","setDateToSend","city","setCity","department","setDepartment","postCardText","setPostCardText","comment","setComment","status","setStatus","paymentStatus","setPaymentStatus","searchQueryBox","setSearchQueryBox","searchQueryPostCard","setSearchQueryPostCard","onUpd","console","log","client_name","client_phone","date_to_send","post_card_text","payment_status","boxModalVisible","setBoxModalVisible","postCardModalVisible","setPostCardBoxModalVisible","refreshAndHide","changeChosenBox","key","value","number","map","i","changeChosenPostCard","addOrder","formData","FormData","append","orderBoxes","orderPostCards","forEach","push","id","amount","JSON","stringify","then","checkPostCard","res","addChosenPostCard","isUniq","Date","now","checkBox","addChosenBox","removeChosenBox","filter","removeChosenPostCard","showBoxModal","setBoxes","rows","boxes","showPostCardModal","setPostCards","postCards","searchBoxList","name","toLowerCase","includes","searchPostCardList","calcPrice","color","length","marginLeft","width","height","process","env","REACT_APP_API_URL","img","fontSize","marginBottom","e","target","marginTop","Number","title","paymentStat","minHeight","event"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\r\nimport {\r\n    Form,\r\n    Modal,\r\n    Button,\r\n    Row,\r\n    Col,\r\n    Dropdown,\r\n    Container,\r\n    ModalBody,\r\n    ModalTitle,\r\n    Card,\r\n    InputGroup, FormControl\r\n} from \"react-bootstrap\";\r\nimport {createBox, fetchBoxes, fetchOneBox, updateBox} from \"../../http/boxApi\";\r\nimport {useLocation, useNavigate, useParams} from \"react-router-dom\";\r\nimport {BOXPAGE_ROUTE} from \"../../utils\";\r\nimport {login} from \"../../http/userApi\";\r\nimport data from \"bootstrap/js/src/dom/data\";\r\nimport {Context} from \"../../index\";\r\nimport ModalHeader from \"react-bootstrap/ModalHeader\";\r\nimport {fetchPostCards} from \"../../http/postCardApi\";\r\nimport {createOrder, updateOrder} from \"../../http/orderApi\";\r\nimport MyAlert from \"../MyAlert\";\r\n\r\nconst CreateOrder = ({show, onHide, curOrder, isUpd}) => {\r\n\r\n\r\n\r\n    const {order} = useContext(Context)\r\n    const {box} = useContext(Context)\r\n    const {postCard} = useContext(Context)\r\n\r\n    const [searchedBox, setSearchedBox] = useState([])\r\n    const [searchedPostCard, setSearchedPostCard] = useState([])\r\n    const [showAlert, setShowAlert] = useState(false)\r\n\r\n    const [chosenBox, setChosenBox] = useState([])\r\n    const [chosenPostCard, setChosenPostCard] = useState([])\r\n\r\n    const [price, setPrice] = useState('')\r\n    const [clientName, setClientName] = useState('')\r\n    const [clientPhone, setClientPhone] = useState('')\r\n    const [dateToSend, setDateToSend] = useState('')\r\n    const [city, setCity] = useState('')\r\n    const [department, setDepartment] = useState('')\r\n    const [postCardText, setPostCardText] = useState('')\r\n    const [comment, setComment] = useState('')\r\n\r\n\r\n    const [status,setStatus] = useState(null)\r\n    const [paymentStatus,setPaymentStatus] = useState(null)\r\n    const [searchQueryBox, setSearchQueryBox] = useState('')\r\n    const [searchQueryPostCard, setSearchQueryPostCard] = useState('')\r\n\r\n\r\n    const onUpd = () =>{\r\n        console.log('upd ')\r\n        setPrice(curOrder.price)\r\n        setClientName(curOrder.client_name)\r\n        setClientPhone(curOrder.client_phone)\r\n        setDateToSend(curOrder.date_to_send)\r\n        setCity(curOrder.city)\r\n        setDepartment(curOrder.department)\r\n        setPostCardText(curOrder.post_card_text)\r\n        setComment(curOrder.comment)\r\n        setStatus(curOrder.status)\r\n        setPaymentStatus(curOrder.payment_status)\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    const [boxModalVisible, setBoxModalVisible] = useState(false)\r\n    const [postCardModalVisible, setPostCardBoxModalVisible] = useState(false)\r\n\r\n\r\n    const refreshAndHide = () =>{\r\n        setStatus(null)\r\n        setPaymentStatus(null)\r\n        setPrice()\r\n        setClientName('')\r\n        setClientPhone('')\r\n        setDateToSend('')\r\n        setCity('')\r\n        setDepartment('')\r\n        setPostCardText('')\r\n        setComment('')\r\n        setChosenBox([])\r\n        setChosenPostCard([])\r\n        onHide()\r\n\r\n    }\r\n    const changeChosenBox = (key,value,number) =>{\r\n        setChosenBox(chosenBox.map(i => i.number === number ? {...i, [key]: value} : i))\r\n    }\r\n    const changeChosenPostCard = (key,value,number) =>{\r\n        setChosenPostCard(chosenPostCard.map(i => i.number === number ? {...i, [key]: value} : i))\r\n    }\r\n\r\n    const addOrder = () =>{\r\n        console.log('CreateOrder')\r\n        const formData =  new FormData()\r\n        formData.append('client_name', clientName)\r\n        if(clientPhone)formData.append('client_phone', clientPhone)\r\n        if(dateToSend)formData.append('date_to_send', dateToSend)\r\n        if(city)formData.append('city', city)\r\n        if(department)formData.append('department', department)\r\n        if(postCardText)formData.append('post_card_text', postCardText)\r\n        if(comment)formData.append('comment', comment)\r\n\r\n        const orderBoxes = []\r\n        const orderPostCards = []\r\n        chosenBox.forEach(box =>{\r\n            orderBoxes.push({\r\n                id:box.box.id,\r\n                amount:box.amount\r\n            })\r\n        })\r\n\r\n        chosenPostCard.forEach(postCard =>{\r\n            orderPostCards.push({\r\n                id:postCard.postCard.id,\r\n                amount:postCard.amount\r\n            })\r\n        })\r\n\r\n        console.log(orderBoxes)\r\n        console.log(orderPostCards)\r\n        formData.append('price', `${price}`)\r\n        formData.append('status', status)\r\n        formData.append('payment_status', paymentStatus)\r\n        formData.append('orderBoxes', JSON.stringify(orderBoxes))\r\n        formData.append('orderPostCards', JSON.stringify(orderPostCards))\r\n        if(isUpd){\r\n            console.log('updating')\r\n            updateOrder(curOrder.id,formData).then(data => refreshAndHide())\r\n        } else {\r\n            console.log('creating')\r\n\r\n            createOrder(formData).then(data =>refreshAndHide())\r\n        }\r\n\r\n\r\n    }\r\n    const checkPostCard = (postCard) =>{\r\n        let res = true\r\n        chosenPostCard.forEach((i) =>{\r\n            if(i.postCard.id === postCard.id){\r\n                res = false\r\n            }\r\n        })\r\n        return res\r\n    }\r\n    const addChosenPostCard = (postCard) => {\r\n        const isUniq = checkPostCard(postCard)\r\n\r\n        if (isUniq) {\r\n            setChosenPostCard([...chosenPostCard, {postCard: postCard, amount: 1, number: Date.now()}])\r\n            setPostCardBoxModalVisible(false)\r\n        } else {\r\n            setShowAlert(true)\r\n        }\r\n    }\r\n   const checkBox = (box) =>{\r\n            let res = true\r\n            chosenBox.forEach((i) =>{\r\n                if(i.box.id === box.id){\r\n                    res = false\r\n                }\r\n            })\r\n            return res\r\n    }\r\n   const addChosenBox = (box) =>{\r\n            const isUniq = checkBox(box)\r\n            if(isUniq){\r\n                setChosenBox([...chosenBox,{box:box, amount:1, number:Date.now()}])\r\n                setBoxModalVisible(false)\r\n            }else {\r\n               setShowAlert(true)\r\n            }\r\n\r\n    }\r\n    const removeChosenBox = (id) => {\r\n        setChosenBox(chosenBox.filter(i => i.box.id !== id))\r\n    }\r\n    const removeChosenPostCard = (id) => {\r\n        setChosenPostCard(chosenPostCard.filter(i => i.postCard.id !== id))\r\n    }\r\n\r\n    const showBoxModal = () =>{\r\n        fetchBoxes().then(data =>{\r\n            box.setBoxes(data.rows)\r\n            setSearchedBox(box.boxes)\r\n            setBoxModalVisible(true)\r\n            })\r\n    }\r\n    const showPostCardModal = () =>{\r\n        fetchPostCards().then(data =>{\r\n            postCard.setPostCards(data.rows)\r\n            setSearchedPostCard(postCard.postCards)\r\n            setPostCardBoxModalVisible(true)\r\n        })\r\n    }\r\n    const searchBoxList = () =>{\r\n        setSearchedBox(box.boxes.filter(box => box.name.toLowerCase().includes(searchQueryBox.toLowerCase())))\r\n    }\r\n    const searchPostCardList = () =>{\r\n        setSearchedPostCard(postCard.postCards.filter(postCard => postCard.name.toLowerCase().includes(searchQueryPostCard.toLowerCase())))\r\n    }\r\n    const calcPrice = () =>{\r\n        let res = 0\r\n        chosenBox.forEach((box)=> res += box.box.price * box.amount)\r\n        chosenPostCard.forEach((postCard)=> res += postCard.postCard.price * postCard.amount)\r\n        setPrice(res)\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Container>\r\n\r\n\r\n        <Modal\r\n            show={show}\r\n            onHide={refreshAndHide}\r\n            size=\"lg\"\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    {isUpd?'Редагувати': 'Додати замовлення'}\r\n                </Modal.Title>\r\n\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n\r\n                {isUpd\r\n                    ?<div\r\n                        style={{color:\"red\"}}\r\n                    >\r\n                    *При додаванні до замовлення нового боксу чи декору, існуючі буде видалено\r\n                    </div>\r\n                    :<div></div>}\r\n                <div className=\"d-flex flex-column\">\r\n                    {chosenBox.length===0\r\n                        ?<div></div>\r\n                        : <h3 style={{marginLeft:30}}>Бокси:</h3>}\r\n                    {chosenBox.map(box =>{\r\n                       return <Row key={ box.box.id} className=\"d-flex align-items-center\">\r\n                            <Col md={5}>\r\n                            <Card key={box.box.id} style={{ width: 200,  height:280}} className=\"m-2 p-0\">\r\n                            <Card.Img variant=\"top\" src={process.env.REACT_APP_API_URL + box.box.img}  height={200} />\r\n                        <Card.Body style={{fontSize:12}}>\r\n                            <Card.Title>{box.box.name}</Card.Title>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    </Col>\r\n                        <Col md={5} className=\"d-flex flex-column\">\r\n                            <div style={{fontSize:20, marginBottom:20}}>Кількість боксів:</div>\r\n                            <InputGroup size=\"lg\" className=\"mb-3\">\r\n                                <FormControl\r\n                                    style={{width:50}}\r\n                                    placeholder=\"Введіть кількість..\"\r\n                                    type=\"number\"\r\n                                    value={box.amount}\r\n                                    onChange={(e) => changeChosenBox('amount',e.target.value,box.number)}\r\n                                />\r\n\r\n                            </InputGroup>\r\n                            <Button\r\n                                style={{width:150}}\r\n                                variant=\"outline-danger\"\r\n                                onClick={()=> removeChosenBox(box.box.id)}\r\n                            >\r\n                                Видалити\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                    })}\r\n\r\n                </div>\r\n                <div className=\"d-flex flex-column\">\r\n\r\n                    <Button\r\n                        onClick={showBoxModal}\r\n                        className=\"mt-3\"\r\n\r\n                    >\r\n                        Додати Бокс\r\n                    </Button>\r\n                    {chosenPostCard.length===0\r\n                        ?<div></div>\r\n                        : <h3 style={{marginLeft:30, marginTop:30}}>Декор:</h3>}\r\n                    {chosenPostCard.map(postCard =>\r\n                        <Row key={postCard.id}className=\"d-flex align-items-center\">\r\n                            <Col md={5}>\r\n                                <Card key={postCard.postCard.id} style={{ width: 200,  height:280}} className=\"m-2 p-0\">\r\n                                    <Card.Img variant=\"top\" src={process.env.REACT_APP_API_URL + postCard.postCard.img}  height={200} />\r\n                                    <Card.Body style={{fontSize:12}}>\r\n                                        <Card.Title>{postCard.postCard.name}</Card.Title>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </Col>\r\n                            <Col md={5} className=\"d-flex flex-column\">\r\n                                <div style={{fontSize:20, marginBottom:20}}>Кількість:</div>\r\n                                <InputGroup size=\"lg\" className=\"mb-3\">\r\n                                    <FormControl\r\n                                        style={{width:50}}\r\n                                        placeholder=\"Введіть кількість..\"\r\n                                        type=\"number\"\r\n                                        value={postCard.amount}\r\n                                        onChange={(e) =>\r\n                                            changeChosenPostCard('amount',e.target.value,postCard.number)\r\n                                        }\r\n                                    />\r\n\r\n                                </InputGroup>\r\n                                <Button\r\n                                    style={{width:150}}\r\n                                    variant=\"outline-danger\"\r\n                                    onClick={()=> removeChosenPostCard(postCard.postCard.id)}\r\n                                >\r\n                                    Видалити\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                    )}\r\n                    <Button\r\n                        onClick={showPostCardModal}\r\n                        className=\"mt-3\"\r\n                    >\r\n                        Додати Декор\r\n                    </Button>\r\n                </div>\r\n\r\n                <Form>\r\n\r\n                    <Form.Control\r\n                        className=\"mt-3\"\r\n                        onChange={e => setClientName(e.target.value)}\r\n                        placeholder={\"Введіть ім'я клієнта\"}\r\n\r\n                        value={clientName}\r\n                    />\r\n                    <Form.Control\r\n                        className=\"mt-3\"\r\n                        onChange={e => setClientPhone(e.target.value)}\r\n                        placeholder={\"Введіть телефон клієнта\"}\r\n                        type=\"phone\"\r\n                        value={clientPhone}\r\n                    />\r\n                    <Form.Control\r\n                        className=\"mt-3\"\r\n                        onChange={e => setDateToSend(e.target.value)}\r\n                        placeholder={\"Введіть дату відправки\"}\r\n                        value={dateToSend}\r\n                    />\r\n                    <Form.Control\r\n                        className=\"mt-3\"\r\n                        onChange={e => setCity(e.target.value)}\r\n                        placeholder={\"Введіть місто доставки\"}\r\n                        value={city}\r\n                    />\r\n                    <Form.Control\r\n                        className=\"mt-3\"\r\n                        onChange={e => setDepartment(e.target.value)}\r\n                        placeholder={\"Введіть відділення  НП\"}\r\n                        value={department}\r\n                    />\r\n                    {chosenPostCard.length === 0\r\n                        ?<div></div>\r\n                        : <Form.Control\r\n                            className=\"mt-3\"\r\n                            onChange={e => setPostCardText(e.target.value)}\r\n                            placeholder={\"Коментар до декору\"}\r\n                            value={postCardText}\r\n                        />\r\n                    }\r\n\r\n\r\n                    <Form.Control\r\n                        className=\"mt-3\"\r\n                        onChange={e => setComment(e.target.value)}\r\n                        placeholder={\"Коментар\"}\r\n                        value={comment}\r\n                    />\r\n                    <Row className=\"d-flex justify-content-between align-items-center\"\r\n                         style={{marginTop:20, marginLeft:0}}\r\n                    >\r\n                        <Form.Control\r\n\r\n                            style={{width:620}}\r\n                            onChange={e => setPrice(Number(e.target.value))}\r\n                            placeholder={\"Введіть ціну\"}\r\n                            type=\"number\"\r\n                            value={price}\r\n                        />\r\n                        <Button\r\n                            style={{width:150}}\r\n                            variant=\"outline-primary\"\r\n                            onClick={calcPrice}\r\n                        >\r\n                            Розрахувати\r\n                        </Button>\r\n                    </Row>\r\n                    <Dropdown className=\"mt-3\">\r\n                        <Dropdown.Toggle>{status||\"Оберіть стан замовлення\"}</Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {order.status.map(status =>\r\n                                <Dropdown.Item\r\n                                    onClick={() => setStatus(status.title)}\r\n                                    key={status.id}\r\n                                >\r\n                                    {status.title}\r\n                                </Dropdown.Item>\r\n                            )}\r\n                        </Dropdown.Menu>\r\n\r\n                    </Dropdown>\r\n                    <Dropdown className=\"mt-3\">\r\n                        <Dropdown.Toggle>{paymentStatus || \"Оберіть стан оплати\"}</Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {order.paymentStatus.map(paymentStat =>\r\n                                <Dropdown.Item\r\n                                    onClick={() => setPaymentStatus(paymentStat.title)}\r\n                                    key={paymentStat.id}\r\n                                >\r\n                                    {paymentStat.title}\r\n                                </Dropdown.Item>\r\n                            )}\r\n                        </Dropdown.Menu>\r\n\r\n                    </Dropdown>\r\n\r\n                </Form>\r\n                <hr/>\r\n\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant={\"outline-danger\"} onClick={refreshAndHide}>Закрити</Button>\r\n                <Button variant={\"outline-success\"} onClick={addOrder}>{isUpd?\"Зберегти\":\"Додати\"}</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n\r\n        <Modal\r\n            show={boxModalVisible}\r\n            onHide={()=> {setBoxModalVisible(false)\r\n            setSearchQueryBox('')}}\r\n\r\n            size=\"lg\"\r\n            centered\r\n        >\r\n            <ModalHeader closeButton>\r\n                <ModalTitle>\r\n                    Додати Бокс\r\n                </ModalTitle>\r\n            </ModalHeader>\r\n            <ModalBody\r\n                style={{minHeight:500}}\r\n            >\r\n                <MyAlert show={showAlert} setShow={setShowAlert}/>\r\n                <InputGroup className=\"mb-3\">\r\n                    <FormControl\r\n                        placeholder=\"Пошук..\"\r\n                        value={searchQueryBox}\r\n                        onChange={event => {\r\n                            setSearchQueryBox(event.target.value)\r\n                            searchBoxList()\r\n                        }}\r\n\r\n                    />\r\n\r\n                </InputGroup>\r\n                <Row className=\"d-flex justify-content-around\">\r\n                    {searchedBox.length ===0\r\n                        ?<h3 className=\"d-flex justify-content-center \">Нічого не знайдено(</h3>\r\n                        :searchedBox.map(box =>\r\n                        <Card key={box.id} style={{ width: 300 }} className=\"m-2 p-0\">\r\n                            <Card.Img variant=\"top\" src={process.env.REACT_APP_API_URL + box.img} width={300} height={300} />\r\n                            <Card.Body>\r\n                                <Card.Title>{box.name}</Card.Title>\r\n                                <Card.Text>\r\n                                    {box.price} грн\r\n                                </Card.Text>\r\n                                <Button\r\n                                    onClick={()=> {\r\n                                        addChosenBox(box)\r\n                                        }\r\n                                    }\r\n                                    variant=\"primary\"\r\n                                >\r\n                                    Додати\r\n                                </Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    )}\r\n\r\n                </Row>\r\n\r\n            </ModalBody>\r\n            <Modal.Footer>\r\n                <Button variant={\"outline-danger\"} onClick={()=> setBoxModalVisible(false)}>Закрити</Button>\r\n            </Modal.Footer>\r\n\r\n        </Modal>\r\n            <Modal\r\n                show={postCardModalVisible}\r\n                onHide={()=> {setPostCardBoxModalVisible(false)\r\n                setSearchQueryPostCard('')}}\r\n                size=\"lg\"\r\n                centered\r\n            >\r\n                <ModalHeader closeButton>\r\n                    <ModalTitle>\r\n                        Додати Декор\r\n                    </ModalTitle>\r\n                </ModalHeader>\r\n                <ModalBody>\r\n                    <MyAlert show={showAlert} setShow={setShowAlert}/>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <FormControl\r\n                            placeholder=\"Пошук..\"\r\n                            value={searchQueryPostCard}\r\n                            onChange={event => {\r\n                                setSearchQueryPostCard(event.target.value)\r\n                                searchPostCardList()\r\n                            }}\r\n\r\n                        />\r\n\r\n                    </InputGroup>\r\n                    <Row className=\"d-flex justify-content-around\">\r\n\r\n                        {searchedPostCard.length ===0\r\n                            ?<h3 className=\"d-flex justify-content-center \">Нічого не знайдено(</h3>\r\n                            :searchedPostCard.map(postCard =>\r\n                            <Card key={postCard.id} style={{ width: 300 }} className=\"m-2 p-0\">\r\n                                <Card.Img variant=\"top\" src={process.env.REACT_APP_API_URL + postCard.img} width={300} height={300} />\r\n                                <Card.Body>\r\n                                    <Card.Title>{postCard.name}</Card.Title>\r\n                                    <Card.Text>\r\n                                        {postCard.price} грн\r\n                                    </Card.Text>\r\n                                    <Button\r\n                                        onClick={()=> addChosenPostCard(postCard)}\r\n                                        variant=\"primary\"\r\n                                    >\r\n                                        Додати\r\n                                    </Button>\r\n                                </Card.Body>\r\n                            </Card>\r\n\r\n                        )}\r\n                    </Row>\r\n\r\n                </ModalBody>\r\n                <Modal.Footer>\r\n                    <Button variant={\"outline-danger\"} onClick={()=> setPostCardBoxModalVisible(false)}>Закрити</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default CreateOrder;"]},"metadata":{},"sourceType":"module"}