{"ast":null,"code":"var _jsxFileName = \"C:\\\\Main\\\\Projects\\\\weak_app\\\\client\\\\src\\\\pages\\\\ReportOrder.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Button, Container, Row } from \"react-bootstrap\";\nimport { DateRangePicker } from \"rsuite\";\nimport OrderList from \"../components/OrderList\";\nimport { Context } from \"../index\";\nimport { fetchOrders } from \"../http/orderApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReportOrder = () => {\n  _s();\n\n  const {\n    order\n  } = useContext(Context);\n  const [dateRange, setDateRange] = useState([]);\n  const [filteredOrders, setFilteredOrders] = useState([]);\n  const [price, setPrice] = useState(0);\n  const [selfPrice, setSelfPrice] = useState(0);\n  const [boxAmount, setBoxAmount] = useState(0);\n  const [postCardAmount, setPostCardAmount] = useState(0);\n  const [orderAmount, setOrderAmount] = useState(0);\n  const [box, setBox] = useState([]);\n  const [postCard, setPostCard] = useState([]);\n\n  const filterOrder = () => {\n    let startDate = Date.parse(dateRange[0]) / 100000;\n    let endDate = Date.parse(dateRange[1]) / 100000;\n    order.orders.forEach(i => {\n      let checkDate = Date.parse(i.createdAt) / 100000;\n\n      if (checkDate <= endDate) {\n        if (checkDate >= startDate) setFilteredOrders(filtered => {\n          return [...filtered, i];\n        });\n      }\n    });\n    console.log(filteredOrders);\n  };\n\n  const calcOrderAmount = () => {};\n\n  const calcBoxAmount = () => {};\n\n  const calcPostCardAmount = () => {};\n\n  const calcPrice = () => {};\n\n  const calcSelfPrice = () => {};\n\n  const showOrders = () => {\n    filterOrder();\n    filteredOrders.forEach(order => {\n      console.log(order);\n    });\n  };\n\n  useEffect(() => {\n    fetchOrders().then(data => {\n      setOrderAmount(data.count);\n      order.setOrders(data.rows);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(DateRangePicker, {\n            showOneCalendar: true,\n            size: \"lg\",\n            appearance: \"subtle\",\n            placeholder: \"\\u041E\\u0431\\u0435\\u0440\\u0456\\u0442\\u044C \\u043F\\u0435\\u0440\\u0456\\u043E\\u0434\",\n            style: {\n              width: 200\n            },\n            value: dateRange,\n            onChange: e => setDateRange(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => showOrders(),\n            children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 8\n  }, this);\n};\n\n_s(ReportOrder, \"mn5y7RiZAkQd18LN4XuaCZW8qlk=\");\n\n_c = ReportOrder;\nexport default ReportOrder;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReportOrder\");","map":{"version":3,"sources":["C:/Main/Projects/weak_app/client/src/pages/ReportOrder.js"],"names":["React","useContext","useEffect","useState","Button","Container","Row","DateRangePicker","OrderList","Context","fetchOrders","ReportOrder","order","dateRange","setDateRange","filteredOrders","setFilteredOrders","price","setPrice","selfPrice","setSelfPrice","boxAmount","setBoxAmount","postCardAmount","setPostCardAmount","orderAmount","setOrderAmount","box","setBox","postCard","setPostCard","filterOrder","startDate","Date","parse","endDate","orders","forEach","i","checkDate","createdAt","filtered","console","log","calcOrderAmount","calcBoxAmount","calcPostCardAmount","calcPrice","calcSelfPrice","showOrders","then","data","count","setOrders","rows","width","e"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\r\nimport {Button, Container, Row} from \"react-bootstrap\";\r\nimport {DateRangePicker} from \"rsuite\";\r\nimport OrderList from \"../components/OrderList\";\r\nimport {Context} from \"../index\";\r\nimport {fetchOrders} from \"../http/orderApi\";\r\n\r\nconst ReportOrder = () => {\r\n\r\n    const {order} = useContext(Context)\r\n\r\n    const [dateRange,setDateRange] = useState([])\r\n    const [filteredOrders,setFilteredOrders] = useState([])\r\n    const [price,setPrice] = useState(0)\r\n    const [selfPrice, setSelfPrice] = useState(0)\r\n    const [boxAmount, setBoxAmount] = useState(0)\r\n    const [postCardAmount, setPostCardAmount] = useState(0)\r\n    const [orderAmount,setOrderAmount] = useState(0)\r\n    const [box,setBox] = useState([])\r\n    const [postCard,setPostCard] = useState([])\r\n\r\n\r\n\r\n\r\n    const filterOrder = () => {\r\n\r\n        let startDate = Date.parse(dateRange[0])/100000\r\n        let endDate = Date.parse(dateRange[1])/100000\r\n        order.orders.forEach( i =>{\r\n            let checkDate = Date.parse(i.createdAt)/100000\r\n            if(checkDate <= endDate){\r\n                if (checkDate >= startDate)\r\n                    setFilteredOrders((filtered) => {\r\n                        return [\r\n                            ...filtered,\r\n                            i\r\n                        ]\r\n                    })\r\n\r\n            }\r\n        })\r\n        console.log(filteredOrders)\r\n    }\r\n\r\n    const calcOrderAmount = () =>{\r\n\r\n    }\r\n\r\n    const calcBoxAmount = () =>{\r\n\r\n    }\r\n    const calcPostCardAmount = () =>{\r\n\r\n    }\r\n    const calcPrice = () =>{\r\n\r\n    }\r\n\r\n    const calcSelfPrice = () =>{\r\n\r\n    }\r\n\r\n    const showOrders = () =>{\r\n        filterOrder()\r\n        filteredOrders.forEach((order) =>{\r\n            console.log(order)\r\n        })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchOrders().then(data => {\r\n            setOrderAmount(data.count)\r\n            order.setOrders(data.rows)\r\n        })\r\n\r\n    },[])\r\n    return (\r\n       <Container>\r\n           <Row>\r\n               <div className=\"d-flex justify-content-center\">\r\n                   <div>\r\n                       <DateRangePicker\r\n                           showOneCalendar\r\n                           size=\"lg\"\r\n                           appearance=\"subtle\"\r\n                           placeholder=\"Оберіть період\"\r\n                           style={{ width: 200 }}\r\n                           value={dateRange}\r\n                           onChange={(e) =>  setDateRange(e)}\r\n                       />\r\n                       <Button\r\n                           onClick={()=> showOrders()}\r\n                       >\r\n                        Показати\r\n                       </Button>\r\n\r\n                   </div>\r\n                   <div>\r\n\r\n                   </div>\r\n\r\n               </div>\r\n           </Row>\r\n       </Container>\r\n    );\r\n};\r\n\r\nexport default ReportOrder;"]},"metadata":{},"sourceType":"module"}