{"ast":null,"code":"var _jsxFileName = \"C:\\\\Main\\\\Projects\\\\weak_app\\\\client\\\\src\\\\components\\\\PostCardList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport { FormControl, InputGroup, Row } from \"react-bootstrap\";\nimport PostCardItem from \"./PostCardItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostCardList = _s(observer(_c = _s(_ref => {\n  _s();\n\n  let {\n    sort\n  } = _ref;\n  const {\n    postCard\n  } = useContext(Context);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchedPostCard, setSearchedPostCard] = useState([]);\n  useEffect(() => {\n    sortPostCard();\n  }, [sort]);\n\n  const sortPostCard = () => {\n    console.log('sortby', sort);\n\n    if (searchQuery) {\n      setSearchedPostCard([...searchedPostCard].sort((a, b) => a[sort] > b[sort] ? 1 : -1));\n      console.log('sorting... with search');\n      console.log(searchedPostCard);\n    } else {\n      postCard.postCards.sort((a, b) => a[sort] > b[sort] ? 1 : -1);\n      console.log('sorting... without search');\n    }\n  };\n\n  const searchPostCardList = () => {\n    setSearchedPostCard(postCard.postCards.filter(postCard => postCard.name.toLowerCase().includes(searchQuery.toLowerCase())));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    className: \"d-flex mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n      className: \"mb-3\",\n      style: {\n        width: 730\n      },\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        placeholder: \"\\u041F\\u043E\\u0448\\u0443\\u043A..\",\n        value: searchQuery,\n        onChange: event => {\n          setSearchQuery(event.target.value);\n          searchPostCardList();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), searchQuery ? searchedPostCard.map(postCard => /*#__PURE__*/_jsxDEV(PostCardItem, {\n      postCard: postCard\n    }, postCard.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this)) : postCard.postCards.map(postCard => /*#__PURE__*/_jsxDEV(PostCardItem, {\n      postCard: postCard\n    }, postCard.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}, \"qjNEgGmxYzA4VkozUtcUJiQVtus=\")), \"qjNEgGmxYzA4VkozUtcUJiQVtus=\");\n\n_c2 = PostCardList;\nexport default PostCardList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PostCardList$observer\");\n$RefreshReg$(_c2, \"PostCardList\");","map":{"version":3,"sources":["C:/Main/Projects/weak_app/client/src/components/PostCardList.js"],"names":["React","useContext","useEffect","useState","observer","Context","FormControl","InputGroup","Row","PostCardItem","PostCardList","sort","postCard","searchQuery","setSearchQuery","searchedPostCard","setSearchedPostCard","sortPostCard","console","log","a","b","postCards","searchPostCardList","filter","name","toLowerCase","includes","width","event","target","value","map","id"],"mappings":"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","sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {Context} from \"../index\";\r\nimport {FormControl, InputGroup, Row} from \"react-bootstrap\";\r\nimport PostCardItem from \"./PostCardItem\";\r\n\r\nconst PostCardList = observer( ({sort}) => {\r\n    const {postCard} = useContext(Context)\r\n\r\n    const [searchQuery, setSearchQuery] = useState('')\r\n    const [searchedPostCard, setSearchedPostCard] = useState([])\r\n\r\n    useEffect(()=>{\r\n        sortPostCard()\r\n    },[sort])\r\n\r\n    const sortPostCard = () =>{\r\n        console.log('sortby', sort)\r\n        if(searchQuery){\r\n            setSearchedPostCard([...searchedPostCard].sort((a, b) => a[sort] > b[sort] ? 1 : -1))\r\n            console.log('sorting... with search');\r\n            console.log(searchedPostCard)\r\n\r\n        }else {\r\n            postCard.postCards.sort((a, b) => a[sort] > b[sort] ? 1 : -1)\r\n            console.log('sorting... without search');\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const searchPostCardList = () =>{\r\n        setSearchedPostCard(postCard.postCards.filter(postCard => postCard.name.toLowerCase().includes(searchQuery.toLowerCase())))\r\n    }\r\n    return (\r\n        <Row className=\"d-flex mt-5\" >\r\n            <InputGroup\r\n                className=\"mb-3\"\r\n                style={{width:730}}\r\n            >\r\n                <FormControl\r\n                    placeholder=\"Пошук..\"\r\n                    value={searchQuery}\r\n                    onChange={event => {\r\n                        setSearchQuery(event.target.value)\r\n                        searchPostCardList()\r\n                    }}\r\n\r\n                />\r\n\r\n            </InputGroup>\r\n            {searchQuery\r\n                ?searchedPostCard.map(postCard =>\r\n                <PostCardItem key={postCard.id} postCard={postCard}/>\r\n            )   :postCard.postCards.map(postCard =>\r\n                <PostCardItem key={postCard.id} postCard={postCard}/>\r\n            )}\r\n\r\n        </Row>\r\n\r\n    );\r\n});\r\n\r\nexport default PostCardList;"]},"metadata":{},"sourceType":"module"}